name: "fashionNet_4"

###################################### training data
###### top left outfit
layer {
	name: "top"
	type: "Data"
	top:  "top"
	top:  "label_top"
	include {
		phase: TRAIN
	}
	transform_param {
		mirror: true
		mean_file:"/local2/home/tong/fashionRecommendation/models/fashionNet_4/data_prep/mean_prep/top_mean.binaryproto"
	}
	data_param{
		source:"/local2/home/tong/fashionRecommendation/models/fashionNet_4/data_prep/lmdb_data/train_l_top_lmdb"
		batch_size:16
		backend:LMDB
	}
}
###### bot left outfit
layer{
  name: "bot"
  type: "Data"
  top:  "bot"
  top:  "label_bot"
  include{
    phase: TRAIN
  }
  transform_param{
    mirror:true
    mean_file:"/local2/home/tong/fashionRecommendation/models/fashionNet_4/data_prep/mean_prep/bot_mean.binaryproto"
  }
  data_param{
    source:"/local2/home/tong/fashionRecommendation/models/fashionNet_4/data_prep/lmdb_data/train_l_bot_lmdb"
    batch_size:16
    backend:LMDB
  }
}
###### sho left outfit
layer{
  name: "sho"
  type: "Data"
  top:  "sho"
  top:  "label_sho"
  include{
    phase: TRAIN
  }
  transform_param{
    mirror:true
    mean_file:"/local2/home/tong/fashionRecommendation/models/fashionNet_4/data_prep/mean_prep/sho_mean.binaryproto"
  }
  data_param{
    source:"/local2/home/tong/fashionRecommendation/models/fashionNet_4/data_prep/lmdb_data/train_l_sho_lmdb"
    batch_size:16
    backend:LMDB
  }
}
###### top right
layer{
  name: "top_n"
  type: "Data"
  top:  "top_n"
  top:  "label_top_n"
  include{
    phase: TRAIN
  }
  transform_param{
    mirror:true
    mean_file:"/local2/home/tong/fashionRecommendation/models/fashionNet_4/data_prep/mean_prep/top_mean.binaryproto"
  }
  data_param{
    source:"/local2/home/tong/fashionRecommendation/models/fashionNet_4/data_prep/lmdb_data/train_r_top_lmdb"
    batch_size:16
    backend:LMDB
  }
}
###### bot right
layer{
  name: "bot_n"
  type: "Data"
  top:  "bot_n"
  top:  "label_bot_n"
  include{
    phase: TRAIN
  }
  transform_param{
    mirror:true
    mean_file:"/local2/home/tong/fashionRecommendation/models/fashionNet_4/data_prep/mean_prep/bot_mean.binaryproto"
  }
  data_param{
    source:"/local2/home/tong/fashionRecommendation/models/fashionNet_4/data_prep/lmdb_data/train_r_bot_lmdb"
    batch_size:16
    backend:LMDB
  }
}
###### sho right
layer{
  name: "sho_n"
  type: "Data"
  top:  "sho_n"
  top:  "label_sho_n"
  include{
    phase: TRAIN
  }
  transform_param{
    mirror:true
    mean_file:"/local2/home/tong/fashionRecommendation/models/fashionNet_4/data_prep/mean_prep/sho_mean.binaryproto"
  }
  data_param{
    source:"/local2/home/tong/fashionRecommendation/models/fashionNet_4/data_prep/lmdb_data/train_r_sho_lmdb"
    batch_size:16
    backend:LMDB
  }
}
###################################### validation data
###### top left
layer{
  name: "top"
  type: "Data"
  top:  "top"
  top:  "label_top"
  include{
    phase: TEST
  }
  transform_param{
    mean_file:"/local2/home/tong/fashionRecommendation/models/fashionNet_4/data_prep/mean_prep/top_mean.binaryproto"
  }
  data_param{
    source:"/local2/home/tong/fashionRecommendation/models/fashionNet_4/data_prep/lmdb_data/val_l_top_lmdb"
    batch_size:16
    backend:LMDB
  }
}
###### bot left
layer{
  name: "bot"
  type: "Data"
  top:  "bot"
  top:  "label_bot"
  include{
    phase: TEST
  }
  transform_param{
    mean_file:"/local2/home/tong/fashionRecommendation/models/fashionNet_4/data_prep/mean_prep/bot_mean.binaryproto"
  }
  data_param{
    source:"/local2/home/tong/fashionRecommendation/models/fashionNet_4/data_prep/lmdb_data/val_l_bot_lmdb"
    batch_size:16
    backend:LMDB
  }
}
###### sho left
layer{
  name: "sho"
  type: "Data"
  top:  "sho"
  top:  "label_sho"
  include{
    phase: TEST
  }
  transform_param{
    mean_file:"/local2/home/tong/fashionRecommendation/models/fashionNet_4/data_prep/mean_prep/sho_mean.binaryproto"
  }
  data_param{
    source:"/local2/home/tong/fashionRecommendation/models/fashionNet_4/data_prep/lmdb_data/val_l_sho_lmdb"
    batch_size:16
    backend:LMDB
  }
}
###### top right
layer{
  name: "top_n"
  type: "Data"
  top:  "top_n"
  top:  "label_top_n"
  include{
    phase: TEST
  }
  transform_param{
    mean_file:"/local2/home/tong/fashionRecommendation/models/fashionNet_4/data_prep/mean_prep/top_mean.binaryproto"
  }
  data_param{
    source:"/local2/home/tong/fashionRecommendation/models/fashionNet_4/data_prep/lmdb_data/val_r_top_lmdb"
    batch_size:16
    backend:LMDB
  }
}
###### bot right
layer{
  name: "bot_n"
  type: "Data"
  top:  "bot_n"
  top:  "label_bot_n"
  include{
    phase: TEST
  }
  transform_param{
    mean_file:"/local2/home/tong/fashionRecommendation/models/fashionNet_4/data_prep/mean_prep/bot_mean.binaryproto"
  }
  data_param{
    source:"/local2/home/tong/fashionRecommendation/models/fashionNet_4/data_prep/lmdb_data/val_r_bot_lmdb"
    batch_size:16
    backend:LMDB
  }
}
###### sho right
layer{
  name: "sho_n"
  type: "Data"
  top:  "sho_n"
  top:  "label_sho_n"
  include{
    phase: TEST
  }
  transform_param{
    mean_file:"/local2/home/tong/fashionRecommendation/models/fashionNet_4/data_prep/mean_prep/sho_mean.binaryproto"
  }
  data_param{
    source:"/local2/home/tong/fashionRecommendation/models/fashionNet_4/data_prep/lmdb_data/val_r_sho_lmdb"
    batch_size:16
    backend:LMDB
  }
}
###################################### pack left data
layer {
	name:   "pack_left_imgs"
	type:   "Concat"
	bottom: "top"
	bottom: "bot"
	bottom: "sho"
	top:    "top_bot_sho"
	concat_param {
		axis: 1
	}
}
###################################### pack right data
layer {
	name:   "pack_left_imgs_n"
	type:   "Concat"
	bottom: "top_n"
	bottom: "bot_n"
	bottom: "sho_n"
	top:    "top_bot_sho_n"
	concat_param {
		axis: 1
	}
}
###################################### left side net
layer{
	name:   "conv1" # conv1_left
	type:   "Convolution"
	bottom: "top_bot_sho"
	top:    "conv1"
	param{
	  lr_mult:1 
      decay_mult:1
	  name:"conv1_w_"
	}
	param{
		lr_mult:2
		decay_mult:0
		name:"conv1_b_"
	}
	convolution_param{
    	num_output: 96
    	kernel_size: 7
    	stride: 2
    	weight_filler{
    		type:"gaussian"
    		std:0.01
    	}
    	bias_filler{
    		type:"constant"
    		value:0
    	}
	}
}
######
layer{
	name:   "relu1" # relu1_left
	type:   "ReLU"
	bottom: "conv1"
	top:    "conv1"
}
######
layer {
  name:   "norm1"
  type:   "LRN"
  bottom: "conv1"
  top:    "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0005
    beta: 0.75
    k: 2
  }
}
######
layer {
  name:   "pool1"
  type:   "Pooling"
  bottom: "norm1"
  top:    "pool1"  
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
######
layer {
  bottom: "pool1"
  top:    "conv2"
  name:   "conv2" # conv2_left
  type:   "Convolution"
  param{
  	lr_mult:1
  	decay_mult:1
  	name:"conv2_w_"
  }
  param{
  	lr_mult:2
  	decay_mult:0
  	name:"conv2_b_"
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 5
    stride: 2
    weight_filler{
    	type:"gaussian"
    	std:0.01
    }
    bias_filler{
    	type:"constant"
    	value:0.1
    }
  }
}
######
layer {
  bottom: "conv2"
  top:    "conv2"
  name:   "relu2" # relu2_left
  type:   "ReLU"
}
######
layer {
  bottom: "conv2"
  top:    "norm2"
  name:   "norm2" # norm2_left
  type:   "LRN"
  lrn_param {
    local_size: 5
    alpha: 0.0005
    beta: 0.75
    k: 2
  }
}
######
layer {
  bottom: "norm2"
  top:    "pool2"
  name:   "pool2"
  type:   "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
######
layer {
  bottom: "pool2"
  top:    "conv3"
  name:   "conv3" # conv3_left
  type:   "Convolution"
  param{
  	lr_mult:1
  	decay_mult:1
  	name:"conv3_w_"
  }
  param{
  	lr_mult:2
  	decay_mult:0
  	name:"conv3_b_"
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  	weight_filler{
  		type:"gaussian"
  		std:0.01
  	}
  	bias_filler{
  		type:"constant"
  		value:0
  	}
  }
}
######
layer {
  bottom: "conv3"
  top:    "conv3"
  name:   "relu3" # relu3_left
  type:   "ReLU"
}
######
layer {
  bottom: "conv3"
  top:    "conv4"
  name:   "conv4" # conv4_left
  type:   "Convolution"
  param{
  	lr_mult:1
  	decay_mult:1
  	name:"conv4_w_"
  }
  param{
  	lr_mult:2
  	decay_mult:0
  	name:"conv4_b_"
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler{
    	type:"gaussian"
    	std:0.01
    }
    bias_filler{
    	type:"constant"
    	value:0.1
    }
  }
}
######
layer {
  bottom: "conv4"
  top:    "conv4"
  name:   "relu4" # relu4_left
  type:   "ReLU"
}
######
layer {
  bottom: "conv4"
  top:    "conv5"
  name:   "conv5" # conv5_left
  type:   "Convolution"
  param{
  	lr_mult:1
  	decay_mult:1
  	name:"conv5_w_"
  }
  param{
  	lr_mult:2
  	decay_mult:0
  	name:"conv5_b_"
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  	weight_filler{
  		type:"gaussian"
  		std:0.01
  	}
  	bias_filler{
  		type:"constant"
  		value:0.1
  	}
  }
}
######
layer {
  bottom: "conv5"
  top:    "conv5"
  name:   "relu5" # relu5_left
  type:   "ReLU"
}
######
layer {
  bottom: "conv5"
  top:    "pool5"
  name:   "pool5"
  type:   "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
######
layer {
  bottom: "pool5"
  top:    "fc6"
  name:   "fc6" # fc6_left
  type:   "InnerProduct"
  param {
    lr_mult: 1
    decay_mult: 1
  	name:"fc6_w_"
  }
  param {
    lr_mult: 2
    decay_mult: 0
  	name:"fc6_b_"
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }    
  }
}
######
layer {
  bottom: "fc6"
  top:    "fc6"
  name:   "relu6" # relu6_left
  type:   "ReLU"
}
######
layer {
  bottom: "fc6"
  top:    "fc6"
  name:   "drop6" # drop6_left
  type:   "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}
######
layer {
  bottom: "fc6"
  top:    "fc7"
  name:   "fc7" # fc7_left
  type:   "InnerProduct"
  param {
    lr_mult: 1
    decay_mult: 1
  	name:"fc7_w_"
  }
  param {
    lr_mult: 2
    decay_mult: 0
  	name:"fc7_b_"
  }
  inner_product_param {
    num_output: 2048
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }    
  }
}
######
layer {
  bottom: "fc7"
  top:    "fc7"
  name:   "relu7" # relu7_left
  type:   "ReLU"
}
######
layer {
  bottom: "fc7"
  top:    "fc7"
  name:   "drop7" # drop7_left
  type:   "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}
######
layer {
  bottom: "fc7"
  top:    "fc7_normed"
  name:   "norm7" # norm7_left
  type:   "Normalization"
}
###################################### right side net
layer{
	name:   "conv1_n" # conv1_left_n
	type:   "Convolution"
	bottom: "top_bot_sho_n"
	top:    "conv1_n"
	param{
	  lr_mult:1 
      decay_mult:1
	  name:"conv1_w_"
	}
	param{
		lr_mult:2
		decay_mult:0
		name:"conv1_b_"
	}
	convolution_param{
    	num_output: 96
    	kernel_size: 7
    	stride: 2
    	weight_filler{
    		type:"gaussian"
    		std:0.01
    	}
    	bias_filler{
    		type:"constant"
    		value:0
    	}
	}
}
######
layer{
	name:   "relu1_n" #relu1_left_n
	type:   "ReLU"
	bottom: "conv1_n"
	top:    "conv1_n"
}
######
layer {
  name:   "norm1_n"
  type:   "LRN"
  bottom: "conv1_n"
  top:    "norm1_n"
  lrn_param {
    local_size: 5
    alpha: 0.0005
    beta: 0.75
    k: 2
  }
}
######
layer {
  name:   "pool1_n"
  type:   "Pooling"
  bottom: "norm1_n"
  top:    "pool1_n"  
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
######
layer {
  bottom: "pool1_n"
  top:    "conv2_n"
  name:   "conv2_n" #conv2_left_n
  type:   "Convolution"
  param{
  	lr_mult:1
  	decay_mult:1
  	name:"conv2_w_"
  }
  param{
  	lr_mult:2
  	decay_mult:0
  	name:"conv2_b_"
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 5
    stride: 2
    weight_filler{
    	type:"gaussian"
    	std:0.01
    }
    bias_filler{
    	type:"constant"
    	value:0.1
    }
  }
}
######
layer {
  bottom: "conv2_n"
  top:    "conv2_n"
  name:   "relu2_n" # relu2_left_n
  type:   "ReLU"
}
######
layer {
  bottom: "conv2_n"
  top:    "norm2_n"
  name:   "norm2_n" # norm2_left_n
  type:   "LRN"
  lrn_param {
    local_size: 5
    alpha: 0.0005
    beta: 0.75
    k: 2
  }
}
######
layer {
  bottom: "norm2_n"
  top:    "pool2_n"
  name:   "pool2_n"
  type:   "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
######
layer {
  bottom: "pool2_n"
  top:    "conv3_n"
  name:   "conv3_n" # conv3_left_n
  type:   "Convolution"
  param{
  	lr_mult:1
  	decay_mult:1
  	name:"conv3_w_"
  }
  param{
  	lr_mult:2
  	decay_mult:0
  	name:"conv3_b_"
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  	weight_filler{
  		type:"gaussian"
  		std:0.01
  	}
  	bias_filler{
  		type:"constant"
  		value:0
  	}
  }
}
######
layer {
  bottom: "conv3_n"
  top:    "conv3_n"
  name:   "relu3_n" # relu3_left_n
  type:   "ReLU"
}
######
layer {
  bottom: "conv3_n"
  top:    "conv4_n"
  name:   "conv4_n" # conv4_left_n
  type:   "Convolution"
  param{
  	lr_mult:1
  	decay_mult:1
  	name:"conv4_w_"
  }
  param{
  	lr_mult:2
  	decay_mult:0
  	name:"conv4_b_"
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler{
    	type:"gaussian"
    	std:0.01
    }
    bias_filler{
    	type:"constant"
    	value:0.1
    }
  }
}
######
layer {
  bottom: "conv4_n"
  top:    "conv4_n"
  name:   "relu4_n" # relu4_left_n
  type:   "ReLU"
}
######
layer {
  bottom: "conv4_n"
  top:    "conv5_n"
  name:   "conv5_n" # conv5_left_n
  type:   "Convolution"
  param{
  	lr_mult:1
  	decay_mult:1
  	name:"conv5_w_"
  }
  param{
  	lr_mult:2
  	decay_mult:0
  	name:"conv5_b_"
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  	weight_filler{
  		type:"gaussian"
  		std:0.01
  	}
  	bias_filler{
  		type:"constant"
  		value:0.1
  	}
  }
}
######
layer {
  bottom: "conv5_n"
  top:    "conv5_n"
  name:   "relu5_n" # relu5_left_n
  type:   "ReLU"
}
######
layer {
  bottom: "conv5_n"
  top:    "pool5_n"
  name:   "pool5_n"
  type:   "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
######
layer {
  bottom: "pool5_n"
  top:    "fc6_n"
  name:   "fc6_n" # fc6_left_n
  type:   "InnerProduct"
  param {
    lr_mult: 1
    decay_mult: 1
  	name:"fc6_w_"
  }
  param {
    lr_mult: 2
    decay_mult: 0
  	name:"fc6_b_"
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }    
  }
}
######
layer {
  bottom: "fc6_n"
  top:    "fc6_n"
  name:   "relu6_n" # relu6_left_n
  type:   "ReLU"
}
######
layer {
  bottom: "fc6_n"
  top:    "fc6_n"
  name:   "drop6_n" # drop6_left_n
  type:   "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}
######
layer {
  bottom: "fc6_n"
  top:    "fc7_n"
  name:   "fc7_n" # fc7_left_n
  type:   "InnerProduct"
  param {
    lr_mult: 1
    decay_mult: 1
  	name:"fc7_w_"
  }
  param {
    lr_mult: 2
    decay_mult: 0
  	name:"fc7_b_"
  }
  inner_product_param {
    num_output: 2048
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }    
  }
}
######
layer {
  bottom: "fc7_n"
  top:    "fc7_n"
  name:   "relu7_n" # relu7_left_n
  type:   "ReLU"
}
######
layer {
  bottom: "fc7_n"
  top:    "fc7_n"
  name:   "drop7_n" # drop7_left_n
  type:   "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}
######
layer {
  bottom: "fc7_n"
  top:    "fc7_normed_n"
  name:   "norm7_n" # norm7_left_n
  type:   "Normalization"
}
#################################### contrastive loss
###### synthesize the lable
layer {
  name:   "sim"
  type:   "Eltwise"
  bottom: "label_top"
  bottom: "label_bot"
  bottom: "label_sho"
  bottom: "label_top_n"
  bottom: "label_bot_n"
  bottom: "label_sho_n"
  top:    "sim"
  eltwise_param{ 
    operation: PROD
  }  
}
######
layer {
  name:   "loss"
  type:   "ContrastiveLoss"
  bottom: "fc7_normed"
  bottom: "fc7_normed_n"
  bottom: "sim" # 1-smi, 0-not
  top:    "loss"
  contrastive_loss_param {
    margin: 1
  }
}
